{"ast":null,"code":"var _jsxFileName = \"/Users/niteshmangla/Desktop/projects/fronend/NiteshMangla_AssessmentSubmission/src/BookingSystem.js\";\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nconst RoomBooking = () => {\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  let [bookRoom, setBookRoom] = useState('');\n  const totalRooms = 97; // Adjust as needed\n\n  const toggleRoomSelection = room => {\n    setSelectedRooms(prev => prev.includes(room) ? prev.filter(r => r !== room) : [...prev, room]);\n  };\n  const bookRooms = () => {\n    if (!bookRoom) {\n      alert(\"Please select at least one room you want to book!\");\n      return;\n    }\n    if (selectedRooms.length === 97) {\n      alert(\"All the rooms have been booked.\");\n      return;\n    }\n    if (selectedRooms.length + parseInt(bookRoom) > 97) {\n      alert(`${97 - selectedRooms.length} rooms is available.`);\n      return;\n    }\n    if (parseInt(bookRoom) > 5) {\n      alert(\"You can book up to 5 rooms at a time.\");\n      return;\n    }\n    calculateTime();\n  };\n  const resetSelection = () => {\n    setSelectedRooms([]);\n  };\n  const randomSelection = () => {\n    const randomCount = Math.floor(Math.random() * totalRooms) + 1;\n    const newSelection = Array.from({\n      length: randomCount\n    }, (_, i) => i + 1);\n    setSelectedRooms(newSelection);\n  };\n  const calculateTime = () => {\n    let timeTravel = 0;\n    let quote = 0;\n    let prevRemainder = -1;\n    for (let roomNo = 1; roomNo <= totalRooms; roomNo++) {\n      if (!selectedRooms.includes(roomNo)) {\n        let remainder = parseInt(roomNo / 10);\n        if (remainder === 0 || remainder === quote) {\n          timeTravel++;\n        } else if (remainder !== quote) {\n          timeTravel += 2;\n        }\n        quote = remainder;\n        prevRemainder = remainder;\n        --bookRoom;\n        setSelectedRooms(prev => prev.includes(roomNo) ? prev.filter(r => r !== roomNo) : [...prev, roomNo]);\n      }\n      if (prevRemainder === -1 && roomNo > 10 && roomNo % 10 === 0) {\n        timeTravel += 2;\n      }\n      if (roomNo % 10 === 0) {\n        prevRemainder = -1;\n      }\n      if (bookRoom === 0) {\n        break;\n      }\n    }\n    setBookRoom('');\n    alert(`total travel time ${timeTravel}`);\n  };\n  const numbers = Array.from({\n    length: 97\n  }, (_, i) => 97 - i);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column gap-3 p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex gap-2 justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, numbers.slice(0, 7).map(num => /*#__PURE__*/React.createElement(\"div\", {\n    key: num,\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, num))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex gap-2 justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, numbers.slice(7).map(num => /*#__PURE__*/React.createElement(\"div\", {\n    key: num,\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, num)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex gap-2 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control w-auto\",\n    placeholder: \"No of Rooms\",\n    onChange: e => {\n      setBookRoom(e.target.value);\n    },\n    value: bookRoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: bookRooms,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Book\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    onClick: resetSelection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-warning\",\n    onClick: randomSelection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Random\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-5 border m-2\",\n    style: {\n      maxHeight: \"56%\",\n      padding: \"10%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-wrap flex-row-reverse\",\n    style: {\n      maxWidth: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, Array.from({\n    length: totalRooms\n  }, (_, i) => i + 1).reverse().map(room => /*#__PURE__*/React.createElement(\"div\", {\n    key: room,\n    className: `border p-3 m-1 ${selectedRooms.includes(room) ? \"bg-success text-white\" : \"\"} ${room > 97 ? 'invisible' : \"\"}`,\n    style: {\n      width: \"40px\",\n      height: \"40px\",\n      textAlign: \"center\",\n      cursor: \"pointer\"\n    },\n    onClick: () => toggleRoomSelection(room),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, room)))));\n};\nexport default RoomBooking;","map":{"version":3,"names":["React","useState","RoomBooking","selectedRooms","setSelectedRooms","bookRoom","setBookRoom","totalRooms","toggleRoomSelection","room","prev","includes","filter","r","bookRooms","alert","length","parseInt","calculateTime","resetSelection","randomSelection","randomCount","Math","floor","random","newSelection","Array","from","_","i","timeTravel","quote","prevRemainder","roomNo","remainder","numbers","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","num","key","type","placeholder","onChange","e","target","value","onClick","style","maxHeight","padding","maxWidth","reverse","width","height","textAlign","cursor"],"sources":["/Users/niteshmangla/Desktop/projects/fronend/NiteshMangla_AssessmentSubmission/src/BookingSystem.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst RoomBooking = () => {\n    const [selectedRooms, setSelectedRooms] = useState([]);\n    let [bookRoom, setBookRoom] = useState('');\n    const totalRooms = 97; // Adjust as needed\n\n    const toggleRoomSelection = (room) => {\n        setSelectedRooms((prev) =>\n            prev.includes(room) ? prev.filter((r) => r !== room) : [...prev, room]\n        );\n    };\n\n    const bookRooms = () => {\n        if (!bookRoom) {\n            alert(\"Please select at least one room you want to book!\");\n            return;\n        }\n\n        if (selectedRooms.length === 97) {\n            alert(\"All the rooms have been booked.\");\n            return;\n        }\n\n        if ((selectedRooms.length + parseInt(bookRoom)) > 97) {\n            alert(`${97 - selectedRooms.length} rooms is available.`);\n            return;\n        }\n\n        if (parseInt(bookRoom) > 5) {\n            alert(\"You can book up to 5 rooms at a time.\");\n            return;\n        }\n        calculateTime();\n    };\n\n    const resetSelection = () => {\n        setSelectedRooms([]);\n    };\n\n    const randomSelection = () => {\n        const randomCount = Math.floor(Math.random() * totalRooms) + 1;\n        const newSelection = Array.from({length: randomCount}, (_, i) => i + 1);\n        setSelectedRooms(newSelection);\n    };\n\n    const calculateTime = () => {\n        let timeTravel = 0;\n        let quote = 0;\n        let prevRemainder = -1;\n        for (let roomNo = 1; roomNo <= totalRooms; roomNo++) {\n            if (!selectedRooms.includes(roomNo)) {\n                let remainder = parseInt(roomNo / 10);\n                if (remainder === 0 || remainder === quote) {\n                    timeTravel++;\n                } else if (remainder !== quote) {\n                    timeTravel += 2;\n                }\n                quote = remainder;\n                prevRemainder = remainder;\n                --bookRoom;\n                setSelectedRooms((prev) =>\n                    prev.includes(roomNo) ? prev.filter((r) => r !== roomNo) : [...prev, roomNo]\n                );\n            }\n            if (prevRemainder === -1 && roomNo > 10 && roomNo % 10 === 0) {\n                timeTravel += 2;\n            }\n            if(roomNo % 10 === 0){\n                prevRemainder = -1;\n            }\n\n            if (bookRoom === 0) {\n                break;\n            }\n        }\n        setBookRoom('');\n        alert(`total travel time ${timeTravel}`);\n    }\n    const numbers = Array.from({ length: 97 }, (_, i) => 97 - i);\n    return (\n        <div className=\"container mt-4\">\n            <div className=\"d-flex flex-column gap-3 p-3\">\n                {/* First Row (7 items) - Right Aligned */}\n                <div className=\"d-flex gap-2 justify-content-end\">\n                    {numbers.slice(0, 7).map((num) => (\n                        <div key={num} className=\"box\">\n                            {num}\n                        </div>\n                    ))}\n                </div>\n\n                {/* Second Row (10 items) - Right Aligned */}\n                <div className=\"d-flex gap-2 justify-content-end\">\n                    {numbers.slice(7).map((num) => (\n                        <div key={num} className=\"box\">\n                            {num}\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className=\"d-flex gap-2 mb-3\">\n                <input type=\"number\" className=\"form-control w-auto\" placeholder=\"No of Rooms\" onChange={(e) => {\n                    setBookRoom(e.target.value)\n                }} value={bookRoom}/>\n                <button className=\"btn btn-primary\" onClick={bookRooms}>Book</button>\n                <button className=\"btn btn-secondary\" onClick={resetSelection}>Reset</button>\n                <button className=\"btn btn-warning\" onClick={randomSelection}>Random</button>\n            </div>\n            <div className=\"d-flex\">\n                <div className=\"p-5 border m-2\" style={{maxHeight: \"56%\", padding: \"10%\"}}></div>\n                <div className=\"d-flex flex-wrap flex-row-reverse\" style={{maxWidth: \"500px\"}}>\n                    {Array.from({length: totalRooms}, (_, i) => i + 1).reverse().map((room) => (\n                        <div\n                            key={room}\n                            className={`border p-3 m-1 ${selectedRooms.includes(room) ? \"bg-success text-white\" : \"\"} ${room > 97 ? 'invisible' : \"\"}`}\n                            style={{width: \"40px\", height: \"40px\", textAlign: \"center\", cursor: \"pointer\"}}\n                            onClick={() => toggleRoomSelection(room)}\n                        >\n                            {room}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RoomBooking;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}