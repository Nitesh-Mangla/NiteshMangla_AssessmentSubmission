{"ast":null,"code":"var _jsxFileName = \"/Users/niteshmangla/Desktop/projects/fronend/chatty/src/BookingSystem.js\";\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nconst RoomBooking = () => {\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  let [bookRoom, setBookRoom] = useState(0);\n  const [freeRooms, setFreeRooms] = useState([]);\n  const totalRooms = 97; // Adjust as needed\n\n  const toggleRoomSelection = room => {\n    setSelectedRooms(prev => prev.includes(room) ? prev.filter(r => r !== room) : [...prev, room]);\n    if (!freeRooms[room]) {\n      freeRooms.push(room);\n      setFreeRooms(freeRooms);\n    }\n  };\n  const bookRooms = () => {\n    if (!bookRoom) {\n      alert(\"Please select at least one room you want to book!\");\n      return;\n    }\n    if (selectedRooms.length === 97) {\n      alert(\"All the rooms have been booked.\");\n      return;\n    }\n    if (selectedRooms.length + parseInt(bookRoom) > 97) {\n      alert(`${97 - selectedRooms.length} rooms is available.`);\n      return;\n    }\n    if (parseInt(bookRoom) > 5) {\n      alert(\"You can book up to 5 rooms at a time.\");\n      return;\n    }\n\n    // let rooms = parseInt(bookRoom) + selectedRooms.length;\n    // const newSelection = Array.from({length: rooms}, (_, i) => i + 1);\n    // setSelectedRooms(newSelection);\n    calculateTime();\n  };\n  const resetSelection = () => {\n    setSelectedRooms([]);\n  };\n  const randomSelection = () => {\n    const randomCount = Math.floor(Math.random() * totalRooms) + 1;\n    const newSelection = Array.from({\n      length: randomCount\n    }, (_, i) => i + 1);\n    setSelectedRooms(newSelection);\n  };\n  const calculateTime = () => {\n    let timeTravel = 0;\n    let quote = 0;\n    let prevRemainder = -1;\n    for (let roomNo = 1; roomNo <= totalRooms; roomNo++) {\n      if (!selectedRooms.includes(roomNo)) {\n        let remainder = parseInt(roomNo / 10);\n        if (remainder === 0 || remainder === quote) {\n          timeTravel++;\n        } else if (remainder !== quote) {\n          timeTravel += 2;\n        }\n        quote = remainder;\n        prevRemainder = remainder;\n        --bookRoom;\n        selectedRooms.push(roomNo);\n      }\n      if (prevRemainder === -1 && roomNo > 10 && roomNo % 10 === 0) {\n        timeTravel += 2;\n      }\n      if (roomNo % 10 === 0) {\n        prevRemainder = -1;\n      }\n      if (bookRoom === 0) {\n        break;\n      }\n    }\n    setSelectedRooms(selectedRooms);\n    alert(`total travel time ${timeTravel}`);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex gap-2 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control w-auto\",\n    placeholder: \"No of Rooms\",\n    onChange: e => {\n      setBookRoom(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: bookRooms,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Book\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    onClick: resetSelection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-warning\",\n    onClick: randomSelection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Random\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-wrap\",\n    style: {\n      maxWidth: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, Array.from({\n    length: totalRooms\n  }, (_, i) => i + 1).map(room => /*#__PURE__*/React.createElement(\"div\", {\n    key: room,\n    className: `border p-3 m-1 ${selectedRooms.includes(room) ? \"bg-success text-white\" : \"\"}`,\n    style: {\n      width: \"40px\",\n      height: \"40px\",\n      textAlign: \"center\",\n      cursor: \"pointer\"\n    },\n    onClick: () => toggleRoomSelection(room),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, console.log(selectedRooms.includes(room)), room))));\n};\nexport default RoomBooking;","map":{"version":3,"names":["React","useState","RoomBooking","selectedRooms","setSelectedRooms","bookRoom","setBookRoom","freeRooms","setFreeRooms","totalRooms","toggleRoomSelection","room","prev","includes","filter","r","push","bookRooms","alert","length","parseInt","calculateTime","resetSelection","randomSelection","randomCount","Math","floor","random","newSelection","Array","from","_","i","timeTravel","quote","prevRemainder","roomNo","remainder","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","style","maxWidth","map","key","width","height","textAlign","cursor","console","log"],"sources":["/Users/niteshmangla/Desktop/projects/fronend/chatty/src/BookingSystem.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst RoomBooking = () => {\n    const [selectedRooms, setSelectedRooms] = useState([]);\n    let [bookRoom, setBookRoom] = useState(0);\n    const [freeRooms, setFreeRooms] = useState([]);\n    const totalRooms = 97; // Adjust as needed\n\n    const toggleRoomSelection = (room) => {\n        setSelectedRooms((prev) =>\n            prev.includes(room) ? prev.filter((r) => r !== room) : [...prev, room]\n        );\n\n        if (!freeRooms[room]) {\n            freeRooms.push(room);\n            setFreeRooms(freeRooms);\n        }\n    };\n\n    const bookRooms = () => {\n        if (!bookRoom) {\n            alert(\"Please select at least one room you want to book!\");\n            return;\n        }\n\n        if (selectedRooms.length === 97) {\n            alert(\"All the rooms have been booked.\");\n            return;\n        }\n\n        if ((selectedRooms.length + parseInt(bookRoom)) > 97) {\n            alert(`${97 - selectedRooms.length} rooms is available.`);\n            return;\n        }\n\n        if (parseInt(bookRoom) > 5) {\n            alert(\"You can book up to 5 rooms at a time.\");\n            return;\n        }\n\n        // let rooms = parseInt(bookRoom) + selectedRooms.length;\n        // const newSelection = Array.from({length: rooms}, (_, i) => i + 1);\n        // setSelectedRooms(newSelection);\n        calculateTime();\n    };\n\n    const resetSelection = () => {\n        setSelectedRooms([]);\n    };\n\n    const randomSelection = () => {\n        const randomCount = Math.floor(Math.random() * totalRooms) + 1;\n        const newSelection = Array.from({length: randomCount}, (_, i) => i + 1);\n        setSelectedRooms(newSelection);\n    };\n\n    const calculateTime = () => {\n        let timeTravel = 0;\n        let quote = 0;\n        let prevRemainder = -1;\n        for (let roomNo = 1; roomNo <= totalRooms; roomNo++) {\n            if (!selectedRooms.includes(roomNo)) {\n                let remainder = parseInt(roomNo / 10);\n                if (remainder === 0 || remainder === quote) {\n                    timeTravel++;\n                } else if (remainder !== quote) {\n                    timeTravel += 2;\n                }\n                quote = remainder;\n                prevRemainder = remainder;\n                --bookRoom;\n                selectedRooms.push(roomNo);\n            }\n            if (prevRemainder === -1 && roomNo > 10 && roomNo % 10 === 0) {\n                timeTravel += 2;\n            }\n            if(roomNo % 10 === 0){\n                prevRemainder = -1;\n            }\n\n            if (bookRoom === 0) {\n                break;\n            }\n        }\n        setSelectedRooms(selectedRooms);\n        alert(`total travel time ${timeTravel}`);\n    }\n\n    return (\n        <div className=\"container mt-4\">\n            <div className=\"d-flex gap-2 mb-3\">\n                <input type=\"number\" className=\"form-control w-auto\" placeholder=\"No of Rooms\" onChange={(e) => {\n                    setBookRoom(e.target.value)\n                }}/>\n                <button className=\"btn btn-primary\" onClick={bookRooms}>Book</button>\n                <button className=\"btn btn-secondary\" onClick={resetSelection}>Reset</button>\n                <button className=\"btn btn-warning\" onClick={randomSelection}>Random</button>\n            </div>\n            <div className=\"d-flex flex-wrap\" style={{maxWidth: \"500px\"}}>\n                {Array.from({length: totalRooms}, (_, i) => i + 1).map((room) => (\n                    <div\n                        key={room}\n                        className={`border p-3 m-1 ${selectedRooms.includes(room) ? \"bg-success text-white\" : \"\"}`}\n                        style={{width: \"40px\", height: \"40px\", textAlign: \"center\", cursor: \"pointer\"}}\n                        onClick={() => toggleRoomSelection(room)}\n                    >\n                        {console.log(selectedRooms.includes(room))}\n                        {room}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default RoomBooking;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}